{
  "_": {
    "postman_id": "41abf3fb-2627-4d3d-957d-fae2839cbc84"
  },
  "item": [
    {
      "id": "f1b45bb4-6480-4d73-baff-5e720d41ac43",
      "name": "Offer Management",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e9b9bd7d-aaf8-4951-bbfb-167c3089b9fb",
          "name": "Create Channel",
          "request": {
            "name": "Create Channel",
            "description": {
              "content": "The first step for connectors to integrate with [Offer Management](https://developers.vtex.com/vtex-rest-api/docs/sent-offers-integration-guide-connectors) is to create a channel, that represents the marketplace to where sellers will send their offers. \n\nThis endpoint creates a channel and the integration developers should call it once for each marketplace. The information about the marketplace sent in the request will be shown to sellers in their [Offer Management UI](https://help.vtex.com/en/tutorial/offers-listing--7MRb9S78aBdZjFGpbuffpE). \n\nThe `feedId` created by this call will apply to all sellers connected to the given channel, and will be necessary for the next step of the integration flow, which is to [activate feed](https://developers.vtex.com/docs/api-reference/marketplace-apis-offer-management#post-/api/sent-offers/feeds). \n\n> ℹ️ Info\r\n> \r\n> Offer Management is available for integrations with [Mercado Livre (Classic and Premium)](https://help.vtex.com/pt/tracks/configurar-integracao-do-mercado-livre--2YfvI3Jxe0CGIKoWIGQEIq), [Netshoes](https://help.vtex.com/pt/tracks/configurar-integracao-da-netshoes--5Ua87lhFg4m0kEcuyqmcCm), and VTEX marketplaces. For more information, see [Offer Management Integration Guide](https://developers.vtex.com/vtex-rest-api/docs/sent-offers-integration-guide-connectors).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "sent-offers",
                "channels"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the seller's VTEX account. Used as query param.",
                    "type": "text/plain"
                  },
                  "key": "an",
                  "value": "accountName"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"vendor\": \"vtex\",\n  \"name\": \"Amazon\",\n  \"logo\": \"https://s3.amazonaws.com/Marketplace-Integration/Bridge/logos/madeiramadeira.png\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ad2e24a1-27cd-4a50-bc14-a122ce26219d",
              "name": "Created",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "sent-offers",
                    "channels"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "an",
                      "value": "accountName"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"vendor\": \"vtex\",\n  \"name\": \"Amazon\",\n  \"logo\": \"https://s3.amazonaws.com/Marketplace-Integration/Bridge/logos/madeiramadeira.png\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"vendor\": \"vtex\",\n  \"name\": \"Amazon\",\n  \"logo\": \"https://marketplace.com/logos/logo.png\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a8190ce1-a9f8-4581-9e69-63dc6a392a33",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/sent-offers/channels - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/sent-offers/channels - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/sent-offers/channels - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"The `feedId` attribute created by the connector that will identify sellers’ feeds with a channel. The `feedId` is always the same for the relation between sellers and channels, but connectors can create more than one `feedId` with a single marketplace, depending on their business rules. The `feedId` follows the standardized pattern `vendor.channel`.\",\"default\":\"vtex.amazon\"},\"vendor\":{\"type\":\"string\",\"description\":\"Name of the connector making the integration.\",\"default\":\"vtex\"},\"name\":{\"type\":\"string\",\"description\":\"Name of the channel with which the integration is being established.\",\"default\":\"Amazon\"},\"logo\":{\"type\":\"string\",\"description\":\"URL redirecting to the image file of the graphic symbol that identifies the marketplace. The file must in PNG format, and the image's dimension should be 300x300 pixels.\",\"default\":\"https://marketplace.com/logos/logo.png\"}},\"title\":\"CreateChannel\",\"example\":{\"id\":\"vtex.amazon\",\"vendor\":\"vtex\",\"name\":\"Amazon\",\"logo\":\"https://marketplace.com/logos/logo.png\"}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/sent-offers/channels - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "961143cd-5fe8-47d6-8d74-207ec9fbd53c",
          "name": "Activate Feed",
          "request": {
            "name": "Activate Feed",
            "description": {
              "content": "In [Offer Management](https://developers.vtex.com/docs/guides/sent-offers-integration-guide-connectors), after [creating the channel](https://developers.vtex.com/docs/api-reference/marketplace-apis-offer-management#post-/api/sent-offers/channels), the next step is to create a feed, which is a list updated nearly in real time with information about the seller's offers sent to the marketplace. \n\nThis endpoint allows the creation of a feed so that the seller's sales channel (or [trade policy](https://help.vtex.com/en/tutorial/how-trade-policies-work--6Xef8PZiFm40kg2STrMkMV)) is connected to the marketplace. Feeds are nearly real time updated with content provided by the marketplace and VTEX modules. \n\nThis endpoint should only be used once, to activate the channel and establish the connection. However, after a [feed is deactivated](https://developers.vtex.com/docs/api-reference/marketplace-apis-offer-management#delete-/api/sent-offers/feeds/-feedId-), in order to activate it again it will be necessary another call to this endpoint.The integration starts with the creation of the Feed. This endpoint is used to establish the connection between connector and seller through the Sent Offers. \n\nThe `feedId` attribute that identifies a feed between a seller and a channel, follows a standardized pattern that will be used by connectors when calling this endpoint. It follows the pattern `vendor.channel`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "sent-offers",
                "feeds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account. Used as query param.",
                    "type": "text/plain"
                  },
                  "key": "an",
                  "value": "{{accountName}}"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"{{feedId}}\",\n  \"affiliateId\": \"MKP\",\n  \"salesChannels\": \"5\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1d4e3c59-90ba-4ba1-a7bf-c4d98be6ed6a",
              "name": "Created",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "sent-offers",
                    "feeds"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "an",
                      "value": "{{accountName}}"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"{{feedId}}\",\n  \"affiliateId\": \"MKP\",\n  \"salesChannels\": \"5\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"account\": \"grocery1\",\n  \"id\": \"vtex.meli-classic\",\n  \"affiliateId\": \"MDC\",\n  \"salesChannel\": \"4\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dd2589d8-0b3f-4d7d-8b5b-d110b6ae3689",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/sent-offers/feeds - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/sent-offers/feeds - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/sent-offers/feeds - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"title\":\"CreateFeed\",\"example\":{\"account\":\"grocery1\",\"id\":\"vtex.meli-classic\",\"affiliateId\":\"MDC\",\"salesChannel\":\"4\"},\"properties\":{\"account\":{\"type\":\"string\",\"description\":\"Seller's account name.\"},\"id\":{\"type\":\"string\",\"description\":\"Channel's ID.\"},\"affiliateId\":{\"type\":\"string\",\"description\":\"Corresponds to the 3-digit [affiliate](https://help.vtex.com/en/tutorial/configuring-affiliates--tutorials_187) identification code created by the seller.\",\"default\":\"MKP\"},\"salesChannel\":{\"type\":\"string\",\"description\":\"Sales channel (or [trade policy](https://help.vtex.com/en/tutorial/como-funciona-uma-politica-comercial--6Xef8PZiFm40kg2STrMkMV)) associated to the seller account created.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/sent-offers/feeds - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7fac16a4-52d9-4ec4-9b2e-ec4c288d7640",
          "name": "List Feeds",
          "request": {
            "name": "List Feeds",
            "description": {
              "content": "In [Offer Management](https://developers.vtex.com/vtex-rest-api/docs/sent-offers-integration-guide-connectors), a feed is a list of information about seller's offers sent to a marketplace, and it is updated in real-time with content provided by the marketplace and VTEX modules. \n\nSince a seller can have integrations with multiple marketplaces, numerous feeds can be associated with an account. This endpoint retrieves a list with all the feeds related to an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "sent-offers",
                "feeds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the Seller's VTEX account. Used as query param.",
                    "type": "text/plain"
                  },
                  "key": "an",
                  "value": "{{accountName}}"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8d01a21e-65bf-46bd-aece-88d74b62b23c",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "sent-offers",
                    "feeds"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "an",
                      "value": "{{accountName}}"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"account\": \"grocery1\",\n    \"id\": \"digibee.shopee\",\n    \"affiliateId\": \"SHP\",\n    \"salesChannel\": \"1\",\n    \"channelName\": \"shopee\",\n    \"channelLogo\": \"https://s3.amazonaws.com/Marketplace-Integration/Bridge/logos/shopee.png\"\n  },\n  {\n    \"account\": \"grocery1\",\n    \"id\": \"v2v.saggin\",\n    \"affiliateId\": \"SGN\",\n    \"salesChannel\": \"1\",\n    \"channelName\": \"Saggin\",\n    \"channelLogo\": \"https://saggin.myvtex.com/api/license-manager/site/pub/accounts/a44ab387-ab95-439e-81aa-7c1a56b45374/logos/show\"\n  },\n  {\n    \"account\": \"grocery1\",\n    \"id\": \"vtex.amazon\",\n    \"affiliateId\": \"MSM\",\n    \"salesChannel\": \"1\",\n    \"channelName\": \"Amazon\",\n    \"channelLogo\": \"https://s3.amazonaws.com/Marketplace-Integration/Bridge/logos/amazon.png\"\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f51f3c3d-c291-405e-b023-53bcc906026e",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/sent-offers/feeds - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/sent-offers/feeds - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/sent-offers/feeds - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{\"type\":\"object\",\"example\":{\"account\":\"grocery1\",\"id\":\"digibee.shopee\",\"affiliateId\":\"SHP\",\"salesChannel\":\"1\",\"channelName\":\"shopee\",\"channelLogo\":\"https://s3.amazonaws.com/Marketplace-Integration/Bridge/logos/shopee.png\"},\"properties\":{\"account\":{\"type\":\"string\",\"description\":\"Seller's account name.\"},\"id\":{\"type\":\"string\",\"description\":\"The `feedId` attribute that identifies a feed between a seller and a channel, follows a standardized pattern that will be used by connectors when calling this endpoint. It follows the pattern `vendor.channel`.\"},\"affiliateId\":{\"type\":\"string\",\"description\":\"Corresponds to the 3-digit [affiliate](https://help.vtex.com/en/tutorial/configuring-affiliates--tutorials_187) identification code created by the seller.\"},\"salesChannel\":{\"type\":\"string\",\"description\":\"Sales channel (or [trade policy](https://help.vtex.com/en/tutorial/how-trade-policies-work--6Xef8PZiFm40kg2STrMkMVa)) used in the integration.\"},\"channelName\":{\"type\":\"string\",\"description\":\"Name of the marketplace, or channel, present in the feed.\"},\"channelLogo\":{\"type\":\"string\",\"description\":\"URL redirecting to the image file of the graphic symbol that identifies the marketplace.\"}}},\"example\":[{\"account\":\"grocery1\",\"id\":\"digibee.shopee\",\"affiliateId\":\"SHP\",\"salesChannel\":\"1\",\"channelName\":\"shopee\",\"channelLogo\":\"https://s3.amazonaws.com/Marketplace-Integration/Bridge/logos/shopee.png\"},{\"account\":\"grocery1\",\"id\":\"v2v.saggin\",\"affiliateId\":\"SGN\",\"salesChannel\":\"1\",\"channelName\":\"Saggin\",\"channelLogo\":\"https://saggin.myvtex.com/api/license-manager/site/pub/accounts/a44ab387-ab95-439e-81aa-7c1a56b45374/logos/show\"},{\"account\":\"grocery1\",\"id\":\"vtex.amazon\",\"affiliateId\":\"MSM\",\"salesChannel\":\"1\",\"channelName\":\"Amazon\",\"channelLogo\":\"https://s3.amazonaws.com/Marketplace-Integration/Bridge/logos/amazon.png\"}]}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/sent-offers/feeds - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "abef9454-5ba6-4682-b28e-8f5bf3934a9a",
          "name": "Update Feed",
          "request": {
            "name": "Update Feed",
            "description": {
              "content": "In [Offer Management](https://developers.vtex.com/vtex-rest-api/docs/sent-offers-integration-guide-connectors), a feed is a list of information about seller's offers sent to a marketplace. \n\nOnce you have [created a feed](https://developers.vtex.com/docs/api-reference/marketplace-apis-offer-management#post-/api/sent-offers/channels), this endpoint allows the seller to update the sales channel (or [trade policy](https://help.vtex.com/en/tutorial/how-trade-policies-work--6Xef8PZiFm40kg2STrMkMV)) and [affiliate](https://help.vtex.com/en/tutorial/configuring-affiliates--tutorials_187) ID used in the integration with the marketplace.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "sent-offers",
                "feeds",
                ":feedId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account. Used as query param.",
                    "type": "text/plain"
                  },
                  "key": "an",
                  "value": "{{accountName}}"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The `feedId` attribute that identifies a feed between a seller and a channel, follows a standardized pattern that will be used by connectors when establishing the connection between the two. It follows the pattern `vendor.channel`.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "vtex.amazon",
                  "key": "feedId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"affiliateId\": \"MKP\",\n  \"salesChannels\": \"5\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "61ce0f8c-099a-4594-8d28-99f7007de22b",
              "name": "No Content",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "sent-offers",
                    "feeds",
                    ":feedId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "an",
                      "value": "{{accountName}}"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The `feedId` attribute that identifies a feed between a seller and a channel, follows a standardized pattern that will be used by connectors when establishing the connection between the two. It follows the pattern `vendor.channel`.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "vtex.amazon",
                      "key": "feedId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"affiliateId\": \"MKP\",\n  \"salesChannels\": \"5\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "No Content",
              "code": 204,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d1176ec4-1f99-4895-bcec-d14c5fb68e5d",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/sent-offers/feeds/:feedId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response has empty Body \npm.test(\"[PUT]::/api/sent-offers/feeds/:feedId - Response has empty Body\", function () {\n    pm.response.to.not.be.withBody;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e4bd10a3-58b5-40db-a7a6-0fea31e3cb63",
          "name": "Get Feed by feedId",
          "request": {
            "name": "Get Feed by feedId",
            "description": {
              "content": "In [Offer Management](https://developers.vtex.com/vtex-rest-api/docs/sent-offers-integration-guide-connectors), after you have [created the channel](https://developers.vtex.com/vtex-rest-api/reference/createchannel), the next step is to create a feed, which is a list of information about the seller's offers sent to the marketplace. \n\nThis endpoint retrieves information about a specific feed by searching through its `feedId`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "sent-offers",
                "feeds",
                ":feedId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account. Used as query param.",
                    "type": "text/plain"
                  },
                  "key": "an",
                  "value": "{{accountName}}"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The `feedId` attribute that identifies a feed between a seller and a channel, follows a standardized pattern that will be used by connectors when establishing the connection between the two. It follows the pattern `vendor.channel`.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "vtex.amazon",
                  "key": "feedId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1ba3bf18-df64-4441-9b1d-33d848b60e25",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "sent-offers",
                    "feeds",
                    ":feedId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "an",
                      "value": "{{accountName}}"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The `feedId` attribute that identifies a feed between a seller and a channel, follows a standardized pattern that will be used by connectors when establishing the connection between the two. It follows the pattern `vendor.channel`.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "vtex.amazon",
                      "key": "feedId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"account\": \"grocery1\",\n  \"affiliateId\": \"vtex.meli-classic\",\n  \"salesChannel\": \"5\",\n  \"channelName\": \"Mercadolivre Classic\",\n  \"channelLogo\": \"https://s3.amazonaws.com/Marketplace-Integration/Bridge/logos/mercadolivre.png\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d6366304-503d-400f-9b2c-dcb718cd64f4",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/sent-offers/feeds/:feedId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/sent-offers/feeds/:feedId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/sent-offers/feeds/:feedId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"RetrieveFeed\",\"type\":\"object\",\"example\":{\"account\":\"grocery1\",\"id\":\"vtex.meli-classic\",\"affiliateId\":\"vtex.meli-classic\",\"salesChannel\":\"5\",\"channelName\":\"Mercadolivre Classic\",\"channelLogo\":\"https://s3.amazonaws.com/Marketplace-Integration/Bridge/logos/mercadolivre.png\"},\"properties\":{\"account\":{\"type\":\"string\",\"description\":\"Seller's account name.\"},\"id\":{\"type\":\"string\",\"description\":\"Channel's ID.\"},\"affiliateId\":{\"type\":\"string\",\"description\":\"This attribute is created by the seller, in their VTEX store configuration.\"},\"salesChannel\":{\"type\":\"string\",\"description\":\"Sales channel (or [trade policy](https://help.vtex.com/en/tutorial/como-funciona-uma-politica-comercial--6Xef8PZiFm40kg2STrMkMV#master-data)) associated to the seller account created.\"},\"channelName\":{\"type\":\"string\",\"description\":\"Name of the channel where the offer was sent.\"},\"channelLogo\":{\"type\":\"string\",\"description\":\"Logo of the channel where the offer was sent.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/sent-offers/feeds/:feedId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2580d5cb-1d77-44f5-9a1c-335bcd05bd55",
          "name": "Deactivate Feed",
          "request": {
            "name": "Deactivate Feed",
            "description": {
              "content": "In [Offer Management](https://developers.vtex.com/vtex-rest-api/docs/sent-offers-integration-guide-connectors), a feed is a list of information about seller's offers sent to a marketplace. After [creating a feed](https://developers.vtex.com/docs/api-reference/marketplace-apis-offer-management#post-/api/sent-offers/feeds), it will be activated; and through this endpoint the seller can deactivate the feed. \n\nWhen a feed is deactivated, all data related to the marketplace is removed from Offer Management UI. That includes the channels, offers, interactions, and errors. \n\nDeactivating a feed does not mean deleting information, and the seller can restore the data by [activating the feed](https://developers.vtex.com/docs/api-reference/marketplace-apis-offer-management#post-/api/sent-offers/feeds) again.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "sent-offers",
                "feeds",
                ":feedId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account. Used as query param.",
                    "type": "text/plain"
                  },
                  "key": "an",
                  "value": "{{accountName}}"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The `feedId` attribute that identifies a feed between a seller and a channel, follows a standardized pattern that will be used by connectors when establishing the connection between the two. It follows the pattern `vendor.channel`.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "vtex.amazon",
                  "key": "feedId"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "eec54349-4214-4968-9b3c-225c9cb66ce3",
              "name": "No Content",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "sent-offers",
                    "feeds",
                    ":feedId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "an",
                      "value": "{{accountName}}"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The `feedId` attribute that identifies a feed between a seller and a channel, follows a standardized pattern that will be used by connectors when establishing the connection between the two. It follows the pattern `vendor.channel`.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "vtex.amazon",
                      "key": "feedId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "No Content",
              "code": 204,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f28f1f66-a0dc-43f8-95a7-8ad12416f477",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/sent-offers/feeds/:feedId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response has empty Body \npm.test(\"[DELETE]::/api/sent-offers/feeds/:feedId - Response has empty Body\", function () {\n    pm.response.to.not.be.withBody;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5046d70a-7cc1-4623-a44e-6b2054c1da95",
          "name": "Open Interaction",
          "request": {
            "name": "Open Interaction",
            "description": {
              "content": "In [Offer Management](https://developers.vtex.com/vtex-rest-api/docs/sent-offers-integration-guide-connectors), VTEX platform and marketplaces interact with offers through a medium called Interaction. For every action that happens to an offer, whether it is a status notification or a price update, the connector creates an Interaction about it. \n\nThis endpoint creates a new interaction for an SKU so that changes can be applied to an offer. The changes informed by interactions are related to: price, inventory, catalog and status. \n\nUsually, interactions process a single type of change at a time, but it is possible to add data about catalog, price, and inventory simultaneously in the same interaction.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "sent-offers",
                "feeds",
                ":feedId",
                "skus",
                ":skuId",
                "interactions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account. Used as query param.",
                    "type": "text/plain"
                  },
                  "key": "an",
                  "value": "{{accountName}}"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The `feedId` attribute that identifies a feed between a seller and a channel, follows a standardized pattern that will be used by connectors when establishing the connection between the two. It follows the pattern `vendor.channel`.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "vtex.amazon",
                  "key": "feedId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) This attribute is the SKU ID in the seller's perspective, registered in their VTEX Catalog.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1234",
                  "key": "skuId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"startDate\": \"2020-10-29\",\n  \"source\": \"seller\",\n  \"origin\": \"catalog\",\n  \"context\": \"setup\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "051a9858-8bdf-401b-81e7-701fec8d07bf",
              "name": "Created",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "sent-offers",
                    "feeds",
                    ":feedId",
                    "skus",
                    ":skuId",
                    "interactions"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "an",
                      "value": "{{accountName}}"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The `feedId` attribute that identifies a feed between a seller and a channel, follows a standardized pattern that will be used by connectors when establishing the connection between the two. It follows the pattern `vendor.channel`.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "vtex.amazon",
                      "key": "feedId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) This attribute is the SKU ID in the seller's perspective, registered in their VTEX Catalog.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "1234",
                      "key": "skuId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"startDate\": \"2020-10-29\",\n  \"source\": \"seller\",\n  \"origin\": \"catalog\",\n  \"context\": \"setup\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"account\": \"in Lorem aliquip\",\n  \"feedId\": \"Duis dolor commodo\",\n  \"skuId\": \"irure ad eiusmod incididunt officia\",\n  \"id\": \"et labore Excepteur\",\n  \"startDate\": \"consequat\",\n  \"result\": \"incid\",\n  \"state\": \"Duis \",\n  \"source\": \"adipisicing fugiat dolor officia in\",\n  \"origin\": \"in in consectetur reprehenderit\",\n  \"context\": \"deserunt aliquip amet\",\n  \"logs\": {\n    \"type\": \"nostrud\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "37de3bb5-c064-4f82-a72e-0ef377a33d58",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/sent-offers/feeds/:feedId/skus/:skuId/interactions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/sent-offers/feeds/:feedId/skus/:skuId/interactions - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/sent-offers/feeds/:feedId/skus/:skuId/interactions - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"CreateInteraction\",\"type\":\"object\",\"example\":{\"account\":\"grocery1\",\"feedId\":\"vtex.madeiramadeira\",\"skuId\":\"1\",\"id\":\"3D585672B15A418EBDFC4BC0E85120A5\",\"startDate\":\"2022-03-07T09:15:00Z\",\"result\":\"processing\",\"state\":\"open\",\"source\":\"seller\",\"origin\":\"inventory\",\"context\":\"setup\",\"logs\":[]},\"properties\":{\"account\":{\"type\":\"string\",\"description\":\"Seller's account name.\"},\"feedId\":{\"type\":\"string\",\"description\":\"Attribute that identifies a feed between a seller and a channel. It follows a standardized pattern that will be used by connectors when establishing the connection between the two.\"},\"skuId\":{\"type\":\"string\",\"description\":\"SKU's unique identifier number.\"},\"id\":{\"type\":\"string\",\"description\":\"Connectors must extend the Sent Offers' codes by adding their own code IDs for mapping specific scenarios that apply to their own system. They can send those codes through a suffix ID added in an existing code.\"},\"startDate\":{\"type\":\"string\",\"description\":\"The day the interaction was created.\"},\"result\":{\"type\":\"string\",\"description\":\"Search interactions, filtering by result. Results can have the following values: \\n\\nSuccess: When events close their lifecycle successfully, and generate updates on an offer in terms of price, inventory, or catalog. \\n\\nFailure: When the connector has detected processes that have failed to be made  due to an error. \\n\\nNotification: When there are processes with the connector that are worth mentioning, but there are no actual updates. Ex: discarded updates or sendings of an offer. \\n\\nProcessing: When an open interaction has not been concluded, and should still receive more steps.\"},\"state\":{\"type\":\"string\",\"description\":\"State, from the seller's address.\"},\"source\":{\"type\":\"string\",\"description\":\"This attribute defines the entity responsible for the interaction.\"},\"origin\":{\"type\":\"string\",\"description\":\"where the interaction originated from. Possible values include `catalog`, `price` or `inventory`.\"},\"context\":{\"type\":\"string\",\"description\":\"This field informs Sent Offers about an offer's lifecycle.\"},\"logs\":{\"type\":\"object\",\"description\":\"History of events related to interactions.\",\"items\":{\"type\":\"string\"},\"properties\":{\"type\":{\"type\":\"string\",\"title\":\"type\",\"description\":\"Type of logs.\"}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/sent-offers/feeds/:feedId/skus/:skuId/interactions - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "57268373-67c0-4a33-acf7-716b5abab448",
          "name": "Get Interaction Data by interactionId",
          "request": {
            "name": "Get Interaction Data by interactionId",
            "description": {
              "content": "In [Offer Management](https://developers.vtex.com/vtex-rest-api/docs/sent-offers-integration-guide-connectors), VTEX platform and marketplaces interact with offers through a medium called [interaction](https://developers.vtex.com/docs/api-reference/marketplace-apis-offer-management#post-/api/sent-offers/feeds/-feedId-/skus/-skuId-/interactions). \n\nA unique code called `interactionId` is used to identify each interaction. This endpoint retrieves information about an interaction, searching by its `interactionId`. \n\nIt also retrieves existing logs through the `log` field.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "sent-offers",
                "feeds",
                ":feedId",
                "skus",
                ":skuId",
                "interactions",
                ":interactionId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account. Used as query param.",
                    "type": "text/plain"
                  },
                  "key": "an",
                  "value": "{{accountName}}"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The `feedId` attribute that identifies a feed between a seller and a channel, follows a standardized pattern that will be used by connectors when establishing the connection between the two. It follows the pattern `vendor.channel`.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "vtex.amazon",
                  "key": "feedId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) This attribute is the SKU ID in the seller's perspective, registered in their VTEX Catalog.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1234",
                  "key": "skuId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) This attribute is the code used to identify an existing interaction.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "d3rdjjf094ma0do",
                  "key": "interactionId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "57065b3a-fe4f-441c-970e-18a921aedeba",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "sent-offers",
                    "feeds",
                    ":feedId",
                    "skus",
                    ":skuId",
                    "interactions",
                    ":interactionId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "an",
                      "value": "{{accountName}}"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The `feedId` attribute that identifies a feed between a seller and a channel, follows a standardized pattern that will be used by connectors when establishing the connection between the two. It follows the pattern `vendor.channel`.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "vtex.amazon",
                      "key": "feedId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) This attribute is the SKU ID in the seller's perspective, registered in their VTEX Catalog.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "1234",
                      "key": "skuId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) This attribute is the code used to identify an existing interaction.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "d3rdjjf094ma0do",
                      "key": "interactionId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"account\": \"ut incididunt labore commodo\",\n  \"feedId\": \"Lorem dolore mollit\",\n  \"skuId\": \"mollit elit\",\n  \"id\": \"ipsum Excepteur\",\n  \"startDate\": \"quis sed\",\n  \"result\": \"nulla occaecat ut anim\",\n  \"state\": \"nostrud nulla enim Excepteur\",\n  \"source\": \"esse dolor ea\",\n  \"origin\": \"sit in\",\n  \"context\": \"esse Ut non\",\n  \"logs\": {\n    \"type\": \"deserunt in reprehenderit\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "58a0b19b-37bb-41e1-8a19-49d134f33d1a",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/sent-offers/feeds/:feedId/skus/:skuId/interactions/:interactionId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/sent-offers/feeds/:feedId/skus/:skuId/interactions/:interactionId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/sent-offers/feeds/:feedId/skus/:skuId/interactions/:interactionId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"RetrieveInteraction\",\"type\":\"object\",\"example\":{\"account\":\"grocery1\",\"feedId\":\"vtex.madeiramadeira\",\"skuId\":\"1\",\"id\":\"7FC112C52F8F43E6A096E29B04AC63F6\",\"startDate\":\"2022-03-07T09:15:00Z\",\"result\":\"processing\",\"state\":\"open\",\"source\":\"seller\",\"origin\":\"inventory\",\"context\":\"setup\",\"logs\":[]},\"properties\":{\"account\":{\"type\":\"string\",\"description\":\"Seller's account name.\"},\"feedId\":{\"type\":\"string\",\"description\":\"Attribute that identifies a feed between a seller and a channel. It follows a standardized pattern that will be used by connectors when establishing the connection between the two.\"},\"skuId\":{\"type\":\"string\",\"description\":\"SKU's unique identifier number.\"},\"id\":{\"type\":\"string\",\"description\":\"Connectors must extend the Sent Offers' codes by adding their own code IDs for mapping specific scenarios that apply to their own system. They can send those codes through a suffix ID added in an existing code.\"},\"startDate\":{\"type\":\"string\",\"description\":\"The day the interaction was created.\"},\"result\":{\"type\":\"string\",\"description\":\"Search interactions, filtering by result. Results can have the following values: \\n\\nSuccess: When events close their lifecycle successfully, and generate updates on an offer in terms of price, inventory, or catalog. \\n\\nFailure: When the connector has detected processes that have failed to be made  due to an error. \\n\\nNotification: When there are processes with the connector that are worth mentioning, but there are no actual updates. Ex: discarded updates or sendings of an offer. \\n\\nProcessing: When an open interaction has not been concluded, and should still receive more steps.\"},\"state\":{\"type\":\"string\",\"description\":\"State, from the seller's address.\"},\"source\":{\"type\":\"string\",\"description\":\"This attribute defines the entity responsible for the interaction.\"},\"origin\":{\"type\":\"string\",\"description\":\"where the interaction originated from. Possible values include `catalog`, `price` or `inventory`.\"},\"context\":{\"type\":\"string\",\"description\":\"This field informs Sent Offers about an offer's lifecycle.\"},\"logs\":{\"type\":\"object\",\"description\":\"History of events related to interactions.\",\"items\":{\"type\":\"string\"},\"properties\":{\"type\":{\"type\":\"string\",\"title\":\"type\",\"description\":\"Type of logs.\"}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/sent-offers/feeds/:feedId/skus/:skuId/interactions/:interactionId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "53899ca3-a7ab-4234-b317-84efd69c4c6f",
          "name": "Close Interaction",
          "request": {
            "name": "Close Interaction",
            "description": {
              "content": "In [Offer Management](https://developers.vtex.com/vtex-rest-api/docs/sent-offers-integration-guide-connectors), VTEX platform and marketplaces interact with offers through a medium called [interaction](https://developers.vtex.com/docs/api-reference/marketplace-apis-offer-management#post-/api/sent-offers/feeds/-feedId-/skus/-skuId-/interactions). \n\nOnce an interaction has fulfilled its initial goal and there are no more actions (or [logs](https://developers.vtex.com/docs/api-reference/marketplace-apis-offer-management#post-/api/sent-offers/feeds/-feedId-/skus/-skuId-/interactions/-interactionId-/logs)) taking place within it, this endpoint closes an interaction.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "sent-offers",
                "feeds",
                ":feedId",
                "skus",
                ":skuId",
                "interactions",
                ":interactionId",
                "close"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account. Used as query param.",
                    "type": "text/plain"
                  },
                  "key": "an",
                  "value": "{{accountName}}"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The `feedId` attribute that identifies a feed between a seller and a channel, follows a standardized pattern that will be used by connectors when establishing the connection between the two. It follows the pattern `vendor.channel`.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "vtex.amazon",
                  "key": "feedId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) This attribute is the SKU ID in the seller's perspective, registered in their VTEX Catalog.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1234",
                  "key": "skuId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) This attribute is the code used to identify an existing interaction.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "d3rdjjf094ma0do",
                  "key": "interactionId"
                }
              ]
            },
            "method": "POST"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "fbdaa8bb-0798-4411-a05c-fbd1f725b198",
              "name": "No Content",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "sent-offers",
                    "feeds",
                    ":feedId",
                    "skus",
                    ":skuId",
                    "interactions",
                    ":interactionId",
                    "close"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "an",
                      "value": "{{accountName}}"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The `feedId` attribute that identifies a feed between a seller and a channel, follows a standardized pattern that will be used by connectors when establishing the connection between the two. It follows the pattern `vendor.channel`.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "vtex.amazon",
                      "key": "feedId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) This attribute is the SKU ID in the seller's perspective, registered in their VTEX Catalog.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "1234",
                      "key": "skuId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) This attribute is the code used to identify an existing interaction.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "d3rdjjf094ma0do",
                      "key": "interactionId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {}
              },
              "status": "No Content",
              "code": 204,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5e75bef3-4f6d-481e-9613-ffde1eca32e5",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/sent-offers/feeds/:feedId/skus/:skuId/interactions/:interactionId/close - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response has empty Body \npm.test(\"[POST]::/api/sent-offers/feeds/:feedId/skus/:skuId/interactions/:interactionId/close - Response has empty Body\", function () {\n    pm.response.to.not.be.withBody;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8eeedba8-05fe-446e-bfd8-f1e25d85a1ef",
          "name": "Create Log",
          "request": {
            "name": "Create Log",
            "description": {
              "content": "In [Offer Management](https://developers.vtex.com/vtex-rest-api/docs/sent-offers-integration-guide-connectors), logs are the granular details of actions that happen within an [interaction](https://developers.vtex.com/docs/api-reference/marketplace-apis-offer-management#post-/api/sent-offers/feeds/-feedId-/skus/-skuId-/interactions), and they are organized in a timeline. All of the micro-steps of an interaction are represented through logs; they are how interactions become visible in Offer Management UI. \n\nThis endpoint adds logs that take place within an interaction, which can be done after [creating an interaction](https://developers.vtex.com/docs/api-reference/marketplace-apis-offer-management#post-/api/sent-offers/feeds/-feedId-/skus/-skuId-/interactions) so that there will be an `interactionId`. \n\n`Errors`: When Offer Management, or the connectors, find an error that prevents sending or updating an offer to a channel, they should open a type failure log, and fill in its details through the `errors` attribute. The information provided should enable sellers to identify and fix errors on their offers. \n\nThe connectors should go through every possible validation, identify all errors, and only after that create the failure log, with the information in a single request.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "sent-offers",
                "feeds",
                ":feedId",
                "skus",
                ":skuId",
                "interactions",
                ":interactionId",
                "logs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account. Used as query param.",
                    "type": "text/plain"
                  },
                  "key": "an",
                  "value": "{{accountName}}"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The `feedId` attribute that identifies a feed between a seller and a channel, follows a standardized pattern that will be used by connectors when establishing the connection between the two. It follows the pattern `vendor.channel`.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "vtex.amazon",
                  "key": "feedId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) This attribute is the SKU ID in the seller's perspective, registered in their VTEX Catalog.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1234",
                  "key": "skuId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) This attribute is the code used to identify an existing interaction.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "d3rdjjf094ma0do",
                  "key": "interactionId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Another log message with some information that is going to be relevant to our users\",\n  \"date\": \"2020-03-22\",\n  \"type\": \"information\",\n  \"agent\": \"broadcaster\",\n  \"evidence\": {\n    \"request\": \"Explanation 1\",\n    \"response\": \"Explanation 2\"\n  },\n  \"data\": {\n    \"externalOfferId\": \"123456\",\n    \"inventory\": \"33\",\n    \"salesPrice\": \"79.99\",\n    \"currency\": \"BRL\",\n    \"status\": \"disabled\"\n  },\n  \"errors\": {\n    \"code\": \"CTLG-001\",\n    \"externalCode\": \"284692\",\n    \"title\": \"Description includes HTML\",\n    \"description\": \"Netshoes does not allow HTML tags in an offer's description. Access the product in your Catalog to remove the HTML tag.\",\n    \"closableOrigins\": [\n      \"catalog\",\n      \"price\"\n    ]\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "725dcc38-8660-4480-b8ce-07a981f6800a",
              "name": "Created",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "sent-offers",
                    "feeds",
                    ":feedId",
                    "skus",
                    ":skuId",
                    "interactions",
                    ":interactionId",
                    "logs"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "an",
                      "value": "{{accountName}}"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The `feedId` attribute that identifies a feed between a seller and a channel, follows a standardized pattern that will be used by connectors when establishing the connection between the two. It follows the pattern `vendor.channel`.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "vtex.amazon",
                      "key": "feedId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) This attribute is the SKU ID in the seller's perspective, registered in their VTEX Catalog.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "1234",
                      "key": "skuId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) This attribute is the code used to identify an existing interaction.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "d3rdjjf094ma0do",
                      "key": "interactionId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"description\": \"Another log message with some information that is going to be relevant to our users\",\n  \"date\": \"2020-03-22\",\n  \"type\": \"information\",\n  \"agent\": \"broadcaster\",\n  \"evidence\": {\n    \"request\": \"Explanation 1\",\n    \"response\": \"Explanation 2\"\n  },\n  \"data\": {\n    \"externalOfferId\": \"123456\",\n    \"inventory\": \"33\",\n    \"salesPrice\": \"79.99\",\n    \"currency\": \"BRL\",\n    \"status\": \"disabled\"\n  },\n  \"errors\": {\n    \"code\": \"CTLG-001\",\n    \"externalCode\": \"284692\",\n    \"title\": \"Description includes HTML\",\n    \"description\": \"Netshoes does not allow HTML tags in an offer's description. Access the product in your Catalog to remove the HTML tag.\",\n    \"closableOrigins\": [\n      \"catalog\",\n      \"price\"\n    ]\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                }
              ],
              "body": "{\n  \"description\": \"Log description\",\n  \"date\": \"2022-05-16T09:16:00Z\",\n  \"agent\": \"MARKETPLACE\",\n  \"evidence\": {},\n  \"type\": \"info\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "672f52ff-32e9-40df-a7e9-ad16d6884f4e",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/sent-offers/feeds/:feedId/skus/:skuId/interactions/:interactionId/logs - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/sent-offers/feeds/:feedId/skus/:skuId/interactions/:interactionId/logs - Content-Type is application/json; charset=utf-8\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json; charset=utf-8\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/sent-offers/feeds/:feedId/skus/:skuId/interactions/:interactionId/logs - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"CreateLog\",\"type\":\"object\",\"example\":{\"id\":\"438B39EF43A24425B6BF35343095DE04\",\"description\":\"Log description\",\"date\":\"2022-05-16T09:16:00Z\",\"agent\":\"MARKETPLACE\",\"evidence\":{},\"type\":\"info\"},\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Connectors must extend the Sent Offers' codes by adding their own code IDs for mapping specific scenarios that apply to their own system. They can send those codes through a suffix ID added in an existing code.\"},\"description\":{\"type\":\"string\",\"description\":\"Log's description.\"},\"date\":{\"type\":\"string\",\"description\":\"Date when the log was created.\"},\"agent\":{\"type\":\"string\",\"description\":\"Entity responsible for creating the entry.\"},\"evidence\":{\"type\":\"object\",\"description\":\"cURL with the call that the connector has made for a VTEX system.\",\"properties\":{\"request\":{\"type\":\"string\",\"description\":\"cURL with the request call that the connector has made for a VTEX system. It will provide the evidence needed to contextualize the entry, if the user needs to fully understand the process ocurred, or solve any errors.\"},\"response\":{\"type\":\"string\",\"description\":\"cURL with the response of the call that the connector has made for a VTEX system. It will provide the evidence needed to contextualize the entry, if the user needs to fully understand the process occurred, or solve any errors.\"}}},\"type\":{\"type\":\"string\",\"description\":\"Type of log.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/sent-offers/feeds/:feedId/skus/:skuId/interactions/:interactionId/logs - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0fb0e8fc-c4d2-4e71-8037-e27a971c3aaa",
          "name": "Get Log Data by logId",
          "request": {
            "name": "Get Log Data by logId",
            "description": {
              "content": "In [Offer Management](https://developers.vtex.com/vtex-rest-api/docs/sent-offers-integration-guide-connectors), logs are the granular details of actions that happen within an [interaction](https://developers.vtex.com/docs/api-reference/marketplace-apis-offer-management#post-/api/sent-offers/feeds/-feedId-/skus/-skuId-/interactions), organized in a timeline. All interaction's micro-steps will be represented through logs; they are how interactions become visible in Offer Management UI. \n\nA unique code called `logId` is used to identify every log created. This endpoint enables the retrieval of information about a log by searching through its `logId`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "sent-offers",
                "feeds",
                ":feedId",
                "skus",
                ":skuId",
                "interactions",
                ":interactionId",
                "logs",
                ":logId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account. Used as query param.",
                    "type": "text/plain"
                  },
                  "key": "an",
                  "value": "{{accountName}}"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The `feedId` attribute that identifies a feed between a seller and a channel, follows a standardized pattern that will be used by connectors when establishing the connection between the two. It follows the pattern `vendor.channel`.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "vtex.amazon",
                  "key": "feedId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) This attribute is the SKU ID in the seller's perspective, registered in their VTEX Catalog.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1234",
                  "key": "skuId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) This attribute is the code used to identify an existing interaction.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "d3rdjjf094ma0do",
                  "key": "interactionId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) A log's identifying code. This attribute is obtained from the Open Log API, or from the response of a Search Interactions API.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "123456",
                  "key": "logId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "62baec54-97e7-470a-827d-d583f4177777",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "sent-offers",
                    "feeds",
                    ":feedId",
                    "skus",
                    ":skuId",
                    "interactions",
                    ":interactionId",
                    "logs",
                    ":logId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "an",
                      "value": "{{accountName}}"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The `feedId` attribute that identifies a feed between a seller and a channel, follows a standardized pattern that will be used by connectors when establishing the connection between the two. It follows the pattern `vendor.channel`.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "vtex.amazon",
                      "key": "feedId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) This attribute is the SKU ID in the seller's perspective, registered in their VTEX Catalog.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "1234",
                      "key": "skuId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) This attribute is the code used to identify an existing interaction.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "d3rdjjf094ma0do",
                      "key": "interactionId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) A log's identifying code. This attribute is obtained from the Open Log API, or from the response of a Search Interactions API.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "123456",
                      "key": "logId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"description\": \"Log description\",\n  \"date\": \"2022-05-16T09:16:00Z\",\n  \"agent\": \"MARKETPLACE\",\n  \"evidence\": {},\n  \"errors\": [\n    {\n      \"code\": \"AUTH-001\",\n      \"externalCode\": \"MYCODE-01\",\n      \"title\": \"Error ao autenticar no marketplace\",\n      \"description\": \"Token inválido\",\n      \"closableOrigins\": [\n        \"inventory\"\n      ]\n    }\n  ],\n  \"type\": \"failure\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "856abd65-a1f6-4d15-b797-b7d8cb38df74",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/sent-offers/feeds/:feedId/skus/:skuId/interactions/:interactionId/logs/:logId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/sent-offers/feeds/:feedId/skus/:skuId/interactions/:interactionId/logs/:logId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/sent-offers/feeds/:feedId/skus/:skuId/interactions/:interactionId/logs/:logId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"GetLog\",\"type\":\"object\",\"example\":{\"id\":\"91957CA041E343D8B921CECFBF9D8443\",\"description\":\"Log description\",\"date\":\"2022-05-16T09:16:00Z\",\"agent\":\"MARKETPLACE\",\"evidence\":{},\"errors\":[{\"code\":\"AUTH-001\",\"externalCode\":\"MYCODE-01\",\"title\":\"Error ao autenticar no marketplace\",\"description\":\"Token inválido\",\"closableOrigins\":[\"inventory\"]}],\"type\":\"failure\"},\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Connectors must extend the Sent Offers' codes by adding their own code IDs for mapping specific scenarios that apply to their own system. They can send those codes through a suffix ID added in an existing code.\"},\"description\":{\"type\":\"string\",\"description\":\"Log description\"},\"date\":{\"type\":\"string\",\"description\":\"Date when the log was created.\"},\"agent\":{\"type\":\"string\",\"description\":\"Entity responsible for creating the entry.\"},\"evidence\":{\"type\":\"object\",\"description\":\"cURL with the call that the connector has made for a VTEX system.\"},\"errors\":{\"type\":\"array\",\"items\":{\"title\":\"Error\",\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"string\"},\"externalCode\":{\"type\":\"string\"},\"title\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"},\"closableOrigins\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}},\"description\":\"A description about errors.\"}},\"type\":{\"type\":\"string\",\"description\":\"Type of log.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/sent-offers/feeds/:feedId/skus/:skuId/interactions/:interactionId/logs/:logId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "088dc427-6613-4aa4-ac02-4bd50db73dbe",
          "name": "Search Interactions and their Logs",
          "request": {
            "name": "Search Interactions and their Logs",
            "description": {
              "content": "In [Offer Management](https://developers.vtex.com/vtex-rest-api/docs/sent-offers-integration-guide-connectors), VTEX platform and marketplaces interact with offers through a medium called [interaction](https://developers.vtex.com/docs/api-reference/marketplace-apis-offer-management#post-/api/sent-offers/feeds/-feedId-/skus/-skuId-/interactions). The granular details of actions and micro-steps that happen within an interaction's are called [logs](https://developers.vtex.com/docs/api-reference/marketplace-apis-offer-management#post-/api/sent-offers/feeds/-feedId-/skus/-skuId-/interactions/-interactionId-/logs). \n\nThis endpoint retrieves information about interactions and all logs within it. It allows filtering interactions by using the following query params: `channel`, `brand`, `category`, `scope`, `result`, `fromDate`, `toDate`. This endpoint also counts with the following pagination query params: `sort`, `from`, `to`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "sent-offers",
                "search",
                "interactions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account. Used as a query param.",
                    "type": "text/plain"
                  },
                  "key": "an",
                  "value": "{{accountName}}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Customizable field for searching interactions.",
                    "type": "text/plain"
                  },
                  "key": "q",
                  "value": "{{query}}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Search interactions, filtering by channel.",
                    "type": "text/plain"
                  },
                  "key": "channels",
                  "value": "{{channelName}}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Search interactions, filtering by brand.",
                    "type": "text/plain"
                  },
                  "key": "brand",
                  "value": "{{brand}}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Search interactions, filtering by category.",
                    "type": "text/plain"
                  },
                  "key": "category",
                  "value": "{{category}}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Search interactions, filtering by scope.",
                    "type": "text/plain"
                  },
                  "key": "scope",
                  "value": "{{scope}}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Search interactions, filtering by result. Results can have the following values: \n\nSuccess: When events close their lifecycle successfully, and generate updates on an offer in terms of price, inventory, or catalog. \n\nFailure: When the connector has detected processes that have failed to be made  due to an error. \n\nNotification: When there are processes with the connector that are worth mentioning, but there are no actual updates. Ex: discarded updates or sendings of an offer. \n\nProcessing:  When an open interaction has not been concluded, and should still receive more steps. This is a transitory state, considering that when an interaction is closed, it can only end with `success`, `failure` or `notification` as its result.",
                    "type": "text/plain"
                  },
                  "key": "result",
                  "value": "{{result}}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Search interactions filtering by sort.",
                    "type": "text/plain"
                  },
                  "key": "sort",
                  "value": "{{sort}}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Search interactions from a given point.",
                    "type": "text/plain"
                  },
                  "key": "from",
                  "value": "{{from}}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Search interactions until a given point.",
                    "type": "text/plain"
                  },
                  "key": "to",
                  "value": "{{to}}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Search interactions from a specific date.",
                    "type": "text/plain"
                  },
                  "key": "fromDate",
                  "value": "{{fromDate}}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Search interactions until a given date.",
                    "type": "text/plain"
                  },
                  "key": "toDate",
                  "value": "{{toDate}}"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "3e47b56c-ecb1-4455-a6db-b69eed0a385f",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "sent-offers",
                    "search",
                    "interactions"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "an",
                      "value": "{{accountName}}"
                    },
                    {
                      "key": "q",
                      "value": "{{query}}"
                    },
                    {
                      "key": "channels",
                      "value": "{{channelName}}"
                    },
                    {
                      "key": "brand",
                      "value": "{{brand}}"
                    },
                    {
                      "key": "category",
                      "value": "{{category}}"
                    },
                    {
                      "key": "scope",
                      "value": "{{scope}}"
                    },
                    {
                      "key": "result",
                      "value": "{{result}}"
                    },
                    {
                      "key": "sort",
                      "value": "{{sort}}"
                    },
                    {
                      "key": "from",
                      "value": "{{from}}"
                    },
                    {
                      "key": "to",
                      "value": "{{to}}"
                    },
                    {
                      "key": "fromDate",
                      "value": "{{fromDate}}"
                    },
                    {
                      "key": "toDate",
                      "value": "{{toDate}}"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "11370c5b-7978-4396-9b51-8ca06f872aff",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/sent-offers/search/interactions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a7a77615-1b0d-4c1d-b538-2bd39dd24c5e",
          "name": "Search Errors",
          "request": {
            "name": "Search Errors",
            "description": {
              "content": "This endpoint provides the single source of truth of updated error codes in [Offer Management's](https://developers.vtex.com/vtex-rest-api/docs/sent-offers-integration-guide-connectors) configuration. It retrieves a list of all the error codes available at that moment. \n\nThe connector will retrieve all the error codes available directly on this API and use the codes that apply the most to their error scenarios. Then, the connector will implement these codes into every validation error inside their system. \n\nThis endpoint allows filtering errors by using the following query params: `channel`, `brand`, `category`, `errorCategory`. It also counts with the following pagination query params: `sort`, `from`, `to`, `q`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "sent-offers",
                "search",
                "errors"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account. Used as query param.",
                    "type": "text/plain"
                  },
                  "key": "an",
                  "value": "{{accountName}}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Customizable field for searching error codes.",
                    "type": "text/plain"
                  },
                  "key": "q",
                  "value": "{{query}}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Search errors filtering by channels.",
                    "type": "text/plain"
                  },
                  "key": "channels",
                  "value": "{{channels}}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Search errors filtering by brand.",
                    "type": "text/plain"
                  },
                  "key": "brand",
                  "value": "{{brand}}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Search errors filtering by category.",
                    "type": "text/plain"
                  },
                  "key": "category",
                  "value": "{{category}}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Search errors filtering by error category.",
                    "type": "text/plain"
                  },
                  "key": "errorCategory",
                  "value": "{{errorCategory}}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Pagination that returns a range of ordered error codes.",
                    "type": "text/plain"
                  },
                  "key": "sort",
                  "value": "{{sort}}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Pagination that returns error codes from a given point.",
                    "type": "text/plain"
                  },
                  "key": "from",
                  "value": "{{from}}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Pagination that returns error codes until a given point.",
                    "type": "text/plain"
                  },
                  "key": "to",
                  "value": "{{to}}"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "f4cf1c96-3cda-4d27-b7ac-fdd15cefae9e",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "sent-offers",
                    "search",
                    "errors"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "an",
                      "value": "{{accountName}}"
                    },
                    {
                      "key": "q",
                      "value": "{{query}}"
                    },
                    {
                      "key": "channels",
                      "value": "{{channels}}"
                    },
                    {
                      "key": "brand",
                      "value": "{{brand}}"
                    },
                    {
                      "key": "category",
                      "value": "{{category}}"
                    },
                    {
                      "key": "errorCategory",
                      "value": "{{errorCategory}}"
                    },
                    {
                      "key": "sort",
                      "value": "{{sort}}"
                    },
                    {
                      "key": "from",
                      "value": "{{from}}"
                    },
                    {
                      "key": "to",
                      "value": "{{to}}"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a0060362-2bcf-413b-9eee-6af0c0f8023f",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/sent-offers/search/errors - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d4c25225-ae2a-4303-b675-06a14786faa8",
          "name": "Get Error Code data by errorCodeId",
          "request": {
            "name": "Get Error Code data by errorCodeId",
            "description": {
              "content": "This endpoint retrieves specific information about an error code in [Offer Management's](https://developers.vtex.com/vtex-rest-api/docs/sent-offers-integration-guide-connectors) configuration. It provides the single source of truth of updated information about an error code through the `errorCodeId`. \n\nThe connector will retrieve all the error codes available directly on this API and use the codes that apply the most to their error scenarios. Then, the connector will implement these codes into every validation error inside their system.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "sent-offers",
                "error-codes",
                ":errorCodeId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Id for the error code chosen.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "errorId",
                  "key": "errorCodeId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d7ff9ea0-d350-4b08-8e73-359bb6fc2a70",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "sent-offers",
                    "error-codes",
                    ":errorCodeId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Id for the error code chosen.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "errorId",
                      "key": "errorCodeId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"type\": \"Authorization\",\n    \"description\": \"Authorization errors where the user can solve by himself just fixing something on the settings. For example, when the user/password is invalid, or a register field is missing...\",\n    \"solutionText\": \"Check connector settings\",\n    \"solutionLink\": \"http://{accountName}.myvtex.com/admin/bridge/#/settings\"\n  },\n  {\n    \"type\": \"Authorization\",\n    \"description\": \"Authorization errors where the user can't solve by himself and depends on someone else to solve. For example, when the user has no access to a specific resource\"\n  },\n  {\n    \"type\": \"Generic mapping\",\n    \"description\": \"Catalog mapping errors different from variation, attribute or category errors. For example, brand mapping or a specific field of that channel.\",\n    \"solutionText\": \"Check mapping spreadsheet\",\n    \"solutionLink\": \"http://{accountName}.myvtex.com/admin/bridge/#/settings\"\n  },\n  {\n    \"type\": \"Variation mapping\",\n    \"description\": \"Errors of variation mapping (SKU specifications). For example, when a color field/value is not mapped correctly.\",\n    \"solutionText\": \"Check mapping spreadsheet\",\n    \"solutionLink\": \"http://{accountName}.myvtex.com/admin/bridge/#/settings\"\n  },\n  {\n    \"type\": \"Attribute mapping\",\n    \"description\": \"Errors of attribute mapping (product specifications). For example, when product specifications are not mapped correctly.\",\n    \"solutionText\": \"Check mapping spreadsheet\",\n    \"solutionLink\": \"http://{accountName}.myvtex.com/admin/bridge/#/settings\"\n  },\n  {\n    \"type\": \"Category mapping\",\n    \"description\": \"Errors of category mapping. For example, when a category ID is not correct; when the user has mapped the parent-category instead of the child-category.\",\n    \"solutionText\": \"Check mapping spreadsheet\",\n    \"solutionLink\": \"http://{accountName}.myvtex.com/admin/bridge/#/settings\"\n  },\n  {\n    \"type\": \"Product info\",\n    \"description\": \"Generic errors of product information sending. For any case different that the other product information error codes don't support\",\n    \"solutionText\": \"Check item on catalog\",\n    \"solutionLink\": \"http://{accountName}.myvtex.com/admin/Site/ProdutoForm.aspx\"\n  },\n  {\n    \"type\": \"Description\",\n    \"description\": \"Description is not according as expected by the channel. For example, when the description is too long; when has HTML; when there is no description and is a mandatory field...\",\n    \"solutionText\": \"Fix description\",\n    \"solutionLink\": \"http://{accountName}.myvtex.com/admin/Site/ProdutoForm.aspx?id={productId}\"\n  },\n  {\n    \"type\": \"Images\",\n    \"description\": \"Images are not according as expected by the channel. For example, when the image must have white background; when has no images and is mandatory to have at least one...\",\n    \"solutionText\": \"Fix images\",\n    \"solutionLink\": \"http://{accountName}.myvtex.com/admin/Site/SkuForm.aspx?idSku={skuId}\"\n  },\n  {\n    \"type\": \"Dimensions\",\n    \"description\": \"Dimensions are not according as expected by the channel. For example, when the weight is below the minimum required; when the dimensions are not filled and is a mandatory field...\",\n    \"solutionText\": \"Check dimensions\",\n    \"solutionLink\": \"http://{accountName}.myvtex.com/admin/Site/SkuForm.aspx?idSku={skuId}\"\n  },\n  {\n    \"type\": \"Title\",\n    \"description\": \"Title is not according as expected by the channel. For example, when the title is too long; when the title doesn't meet the channel taxonomy...\",\n    \"solutionText\": \"Check title\",\n    \"solutionLink\": \"http://{accountName}.myvtex.com/admin/Site/ProdutoForm.aspx?id={productId}\"\n  },\n  {\n    \"type\": \"Identifiers\",\n    \"description\": \"Identifier is not according as expected by the channel. For example, when a EAN, ISBN or UPC is invalid; when a identifier is required but is not filled...\",\n    \"solutionText\": \"Fix item's identifier\",\n    \"solutionLink\": \"http://{accountName}.myvtex.com/admin/Site/SkuForm.aspx?idSku={skuId}\"\n  },\n  {\n    \"type\": \"Channels' rules\",\n    \"description\": \"Errors due channel's business rules that cannot be solved by the user. For example, when the product category is not supported by the channel; when a currency is not supported by the channel...\"\n  },\n  {\n    \"type\": \"Moderation\",\n    \"description\": \"Ad moderated, it does not comply with Mercado Livre policies\",\n    \"solutionText\": \"Apply the actions in the moderation section\"\n  },\n  {\n    \"type\": \"Variation mapping\",\n    \"description\": \"Errors of variation mapping (SKU specifications)\",\n    \"solutionText\": \"Download mapping spreadsheet\",\n    \"solutionLink\": \"http://{accountName}.myvtex.com/admin/dummy-invalid-link/catalog/skus/{skuId}\"\n  },\n  {\n    \"type\": \"Variation mapping YYY\",\n    \"description\": \"Errors of variation mapping (SKU specifications) YYY\",\n    \"solutionText\": \"Download mapping spreadsheet YYY\",\n    \"solutionLink\": \"http://{accountName}.myvtex.com/admin/dummyyy-invalid-link/catalog/skus/{skuId}\"\n  },\n  {\n    \"type\": \"Inventory\",\n    \"description\": \"Errors directly related to all inventory scenarios. This scenarios are for every issue that blocks an inventory from being updated. For example, when the channel has a rule of minimum quantity of inventory for all SKUs of a product.\",\n    \"solutionText\": \"Check inventory levels\",\n    \"solutionLink\": \"http://{accountName}.myvtex.com/admin/inventory/?skuId={skuId}\"\n  },\n  {\n    \"type\": \"Not mapped\",\n    \"description\": \"Errors not mapped by the connector. Commonly, it occurs when the channel's API starts to validate new things without communicating to the connector.\"\n  },\n  {\n    \"type\": \"Price\",\n    \"description\": \"Errors directly related to all price scenarios. This scenarios are for every issue that blocks a price from being updated. For example, when a price changes on rate that is not allowed by the marketplace.\",\n    \"solutionText\": \"Fix price\",\n    \"solutionLink\": \"http://{accountName}.myvtex.com/admin/pricing/#/prices/?page=1&qtd=10&productId={productId}&productName=%22%22\"\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3a623e8e-e64d-4697-b0ca-94f83e18f07a",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/sent-offers/error-codes/:errorCodeId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/sent-offers/error-codes/:errorCodeId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/sent-offers/error-codes/:errorCodeId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{\"title\":\"Listallerrorcode\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"},\"solutionText\":{\"type\":\"string\"},\"solutionLink\":{\"type\":\"string\"}}},\"description\":\"Error description.\",\"example\":[{\"id\":\"AUTH-001\",\"type\":\"Authorization\",\"description\":\"Authorization errors where the user can solve by himself just fixing something on the settings. For example, when the user/password is invalid, or a register field is missing...\",\"solutionText\":\"Check connector settings\",\"solutionLink\":\"http://{accountName}.myvtex.com/admin/bridge/#/settings\"},{\"id\":\"AUTH-002\",\"type\":\"Authorization\",\"description\":\"Authorization errors where the user can't solve by himself and depends on someone else to solve. For example, when the user has no access to a specific resource\"},{\"id\":\"CTLG-001\",\"type\":\"Generic mapping\",\"description\":\"Catalog mapping errors different from variation, attribute or category errors. For example, brand mapping or a specific field of that channel.\",\"solutionText\":\"Check mapping spreadsheet\",\"solutionLink\":\"http://{accountName}.myvtex.com/admin/bridge/#/settings\"},{\"id\":\"CTLG-002\",\"type\":\"Variation mapping\",\"description\":\"Errors of variation mapping (SKU specifications). For example, when a color field/value is not mapped correctly.\",\"solutionText\":\"Check mapping spreadsheet\",\"solutionLink\":\"http://{accountName}.myvtex.com/admin/bridge/#/settings\"},{\"id\":\"CTLG-003\",\"type\":\"Attribute mapping\",\"description\":\"Errors of attribute mapping (product specifications). For example, when product specifications are not mapped correctly.\",\"solutionText\":\"Check mapping spreadsheet\",\"solutionLink\":\"http://{accountName}.myvtex.com/admin/bridge/#/settings\"},{\"id\":\"CTLG-004\",\"type\":\"Category mapping\",\"description\":\"Errors of category mapping. For example, when a category ID is not correct; when the user has mapped the parent-category instead of the child-category.\",\"solutionText\":\"Check mapping spreadsheet\",\"solutionLink\":\"http://{accountName}.myvtex.com/admin/bridge/#/settings\"},{\"id\":\"CTLG-005\",\"type\":\"Product info\",\"description\":\"Generic errors of product information sending. For any case different that the other product information error codes don't support\",\"solutionText\":\"Check item on catalog\",\"solutionLink\":\"http://{accountName}.myvtex.com/admin/Site/ProdutoForm.aspx\"},{\"id\":\"CTLG-006\",\"type\":\"Description\",\"description\":\"Description is not according as expected by the channel. For example, when the description is too long; when has HTML; when there is no description and is a mandatory field...\",\"solutionText\":\"Fix description\",\"solutionLink\":\"http://{accountName}.myvtex.com/admin/Site/ProdutoForm.aspx?id={productId}\"},{\"id\":\"CTLG-007\",\"type\":\"Images\",\"description\":\"Images are not according as expected by the channel. For example, when the image must have white background; when has no images and is mandatory to have at least one...\",\"solutionText\":\"Fix images\",\"solutionLink\":\"http://{accountName}.myvtex.com/admin/Site/SkuForm.aspx?idSku={skuId}\"},{\"id\":\"CTLG-008\",\"type\":\"Dimensions\",\"description\":\"Dimensions are not according as expected by the channel. For example, when the weight is below the minimum required; when the dimensions are not filled and is a mandatory field...\",\"solutionText\":\"Check dimensions\",\"solutionLink\":\"http://{accountName}.myvtex.com/admin/Site/SkuForm.aspx?idSku={skuId}\"},{\"id\":\"CTLG-009\",\"type\":\"Title\",\"description\":\"Title is not according as expected by the channel. For example, when the title is too long; when the title doesn't meet the channel taxonomy...\",\"solutionText\":\"Check title\",\"solutionLink\":\"http://{accountName}.myvtex.com/admin/Site/ProdutoForm.aspx?id={productId}\"},{\"id\":\"CTLG-010\",\"type\":\"Identifiers\",\"description\":\"Identifier is not according as expected by the channel. For example, when a EAN, ISBN or UPC is invalid; when a identifier is required but is not filled...\",\"solutionText\":\"Fix item's identifier\",\"solutionLink\":\"http://{accountName}.myvtex.com/admin/Site/SkuForm.aspx?idSku={skuId}\"},{\"id\":\"CTLG-011\",\"type\":\"Channels' rules\",\"description\":\"Errors due channel's business rules that cannot be solved by the user. For example, when the product category is not supported by the channel; when a currency is not supported by the channel...\"},{\"id\":\"CTLG-012\",\"type\":\"Moderation\",\"description\":\"Ad moderated, it does not comply with Mercado Livre policies\",\"solutionText\":\"Apply the actions in the moderation section\"},{\"id\":\"CTLG-XXX\",\"type\":\"Variation mapping\",\"description\":\"Errors of variation mapping (SKU specifications)\",\"solutionText\":\"Download mapping spreadsheet\",\"solutionLink\":\"http://{accountName}.myvtex.com/admin/dummy-invalid-link/catalog/skus/{skuId}\"},{\"id\":\"CTLG-YYY\",\"type\":\"Variation mapping YYY\",\"description\":\"Errors of variation mapping (SKU specifications) YYY\",\"solutionText\":\"Download mapping spreadsheet YYY\",\"solutionLink\":\"http://{accountName}.myvtex.com/admin/dummyyy-invalid-link/catalog/skus/{skuId}\"},{\"id\":\"INVNT-001\",\"type\":\"Inventory\",\"description\":\"Errors directly related to all inventory scenarios. This scenarios are for every issue that blocks an inventory from being updated. For example, when the channel has a rule of minimum quantity of inventory for all SKUs of a product.\",\"solutionText\":\"Check inventory levels\",\"solutionLink\":\"http://{accountName}.myvtex.com/admin/inventory/?skuId={skuId}\"},{\"id\":\"NTMAP-001\",\"type\":\"Not mapped\",\"description\":\"Errors not mapped by the connector. Commonly, it occurs when the channel's API starts to validate new things without communicating to the connector.\"},{\"id\":\"PRICE-001\",\"type\":\"Price\",\"description\":\"Errors directly related to all price scenarios. This scenarios are for every issue that blocks a price from being updated. For example, when a price changes on rate that is not allowed by the marketplace.\",\"solutionText\":\"Fix price\",\"solutionLink\":\"http://{accountName}.myvtex.com/admin/pricing/#/prices/?page=1&qtd=10&productId={productId}&productName=%22%22\"}]}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/sent-offers/error-codes/:errorCodeId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "type": "any",
        "value": "X-VTEX-API-AppKey",
        "key": "key"
      },
      {
        "type": "any",
        "value": "{{apiKey}}",
        "key": "value"
      },
      {
        "type": "any",
        "value": "header",
        "key": "in"
      }
    ]
  },
  "event": [],
  "variable": [
    {
      "description": {
        "content": "Environment to use. Used as part of the URL.",
        "type": "text/plain"
      },
      "type": "any",
      "value": "{environment}",
      "key": "environment"
    },
    {
      "type": "string",
      "value": "https://portal.{{environment}}.com.br",
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "41abf3fb-2627-4d3d-957d-fae2839cbc84",
    "name": "Sent Offers",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "\r\nThe **Marketplace API** enables marketplaces and sellers hosted on VTEX to perform their collaborative operations.  \r\n\r\n>⚠️ The marketplace must [create an appKey and appToken](https://developers.vtex.com/docs/guides/getting-started-authentication) for each non-VTEX seller that will use this API.\r\n\r\n## Index\r\n\r\n### Notification\r\n\r\nEndpoints used by sellers to notify marketplaces that the price or inventory language has changed for one of their SKUs.\r\n\r\n`POST` [Notify marketplace of price update](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/price)\r\n\r\n`POST` [Notify marketplace of inventory update](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/inventory)\r\n\r\n\r\n### Suggestions\r\n\r\n#### Get Suggestions\r\n\r\nSearch and filter all suggestions using specific criteria.\r\n\r\n`GET` [Get all SKU Suggestions](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions)\r\n\r\n`GET` [Get SKU Suggestion by ID](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerSkuId-)\r\n\r\n\r\n#### Manage Suggestions\r\n\r\nSend or delete SKU suggestions from the seller to marketplace.\r\n\r\n`PUT` [Send SKU Suggestion](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerSkuId-)\r\n\r\n`DELETE` [Delete SKU Suggestion](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#delete-/suggestions/-sellerId-/-sellerSkuId-)\r\n\r\n\r\n#### Get Versions\r\n\r\nSearch and filter all versions of suggestions, using specific criteria.\r\n\r\n`GET` [Get all versions](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerskuid-/versions)\r\n\r\n`GET` [Get version by ID](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerskuid-/versions/-version-)\r\n\r\n\r\n#### Match Received SKUs\r\n\r\nMatch SKU suggestions received in the marketplace.\r\n\r\n`PUT` [Match Received SKUs individually](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerskuid-/versions/-version-/matches/-matchid-)\r\n\r\n`PUT` [Match Multiple Received SKUs](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/matches/action/-actionName-)\r\n\r\n\r\n#### SKU Approval Settings\r\n\r\nAllows marketplaces to configure rules for automatically and manually approving SKUs received from sellers.\r\n\r\n`GET`[Get autoApprove Status in Account Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration/autoapproval/toggle)  \r\n\r\n`PUT`[Activate autoApprove in Marketplace's Account](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/autoapproval/toggle)  \r\n\r\n`GET`[Get Account's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration)\r\n\r\n`PUT`[Save Account's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration)\r\n\r\n`GET`[Get Seller's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration/seller/-sellerId-)\r\n\r\n`PUT`[Save Seller's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/seller/-sellerId-)\r\n\r\n`PUT`[Activate autoApprove Setting for a Seller](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/autoapproval/toggle/seller/-sellerId-)   \r\n\r\n\r\n### Matched Offers\r\n\r\nOffers are seller products and SKUs that were sent to the marketplace, and already have their price and inventory level configured.\r\n\r\n`GET`[Get Matched Offers List](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/offers)\r\n\r\n`GET`[Get Matched Offer's Data by SKU ID](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/product/-productId-/sku/-skuId-)  \r\n\r\n`GET`[Get Matched Offer's Data by Product ID](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/product/-productId-)\r\n",
      "type": "text/plain"
    }
  }
}